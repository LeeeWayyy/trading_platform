name: 'Wait for Docker Compose Services'
description: 'Waits for all services in a docker-compose file to become healthy with configurable timeout and retry behavior'
author: 'Trading Platform Team'

inputs:
  compose-file:
    description: 'Path to docker-compose file (e.g., docker-compose.ci.yml)'
    required: true
  max-iterations:
    description: 'Maximum number of health check iterations before timeout'
    required: false
    default: '30'
  sleep-seconds:
    description: 'Number of seconds to sleep between health check iterations'
    required: false
    default: '4'
  fail-on-timeout:
    description: 'Whether to fail the workflow if services do not become healthy within timeout'
    required: false
    default: 'true'

outputs:
  healthy:
    description: 'Whether all services became healthy (true/false)'
    value: ${{ steps.wait.outputs.healthy }}
  iterations:
    description: 'Number of iterations taken until healthy or timeout'
    value: ${{ steps.wait.outputs.iterations }}

runs:
  using: 'composite'
  steps:
    - name: Wait for services to be healthy
      id: wait
      shell: bash
      run: |
        set -euo pipefail  # Exit on error, undefined vars, and pipe failures

        echo "üîç Waiting for services in ${{ inputs.compose-file }} to become healthy..."
        echo "‚è±Ô∏è  Max iterations: ${{ inputs.max-iterations }}, Sleep: ${{ inputs.sleep-seconds }}s"

        for i in $(seq 1 ${{ inputs.max-iterations }}); do
          # Get service status - fail fast if docker-compose errors
          if ! status=$(docker-compose -f ${{ inputs.compose-file }} ps 2>&1); then
            echo "‚ùå Error: docker-compose command failed"
            echo "$status"
            exit 1
          fi

          # Check for unhealthy or problematic states
          if echo "$status" | grep -qE "(health: starting)|unhealthy|Exit|Restarting"; then
            echo "‚è≥ Services not ready yet (iteration $i/${{ inputs.max-iterations }})..."
            echo "$status" | grep -E "NAME|----" || true
            echo "$status" | grep -vE "^$|NAME|----" || true
            sleep ${{ inputs.sleep-seconds }}
            continue
          fi

          # Verify all expected services show (healthy) status
          if ! echo "$status" | grep -q "(healthy)"; then
            echo "‚è≥ Waiting for healthy status (iteration $i/${{ inputs.max-iterations }})..."
            sleep ${{ inputs.sleep-seconds }}
            continue
          fi

          # All checks passed - services are truly healthy
          echo "‚úÖ All services are healthy after $i iterations"
          echo "healthy=true" >> $GITHUB_OUTPUT
          echo "iterations=$i" >> $GITHUB_OUTPUT
          exit 0
        done

        # Timeout reached
        echo "‚ùå Timeout: Services did not become healthy after ${{ inputs.max-iterations }} iterations"
        echo ""
        echo "üìä Current service status:"
        docker-compose -f ${{ inputs.compose-file }} ps
        echo ""
        echo "üìã Service logs (last 50 lines each):"
        docker-compose -f ${{ inputs.compose-file }} logs --tail=50

        echo "healthy=false" >> $GITHUB_OUTPUT
        echo "iterations=${{ inputs.max-iterations }}" >> $GITHUB_OUTPUT

        if [ "${{ inputs.fail-on-timeout }}" = "true" ]; then
          echo "üí• Failing workflow due to timeout (fail-on-timeout=true)"
          exit 1
        else
          echo "‚ö†Ô∏è  Continuing despite timeout (fail-on-timeout=false)"
          exit 0
        fi

branding:
  icon: 'clock'
  color: 'blue'
